

/** bid: unique identifier of Book (like ISBN)
* title: title of Book
* price: unit price WHEN ordered
* author: name of authors
* category: as specified
*/
DROP TABLE if exists Book;
CREATE TABLE Book (
bid VARCHAR(20) NOT NULL,
title VARCHAR(60) NOT NULL,
price INT NOT NULL,
category VARCHAR(12) CONSTRAINT category_ck CHECK (category IN ('Science','Fiction','Engineering')) NOT NULL,
PRIMARY KEY(bid)
);

#
# Adding data for table 'Book'
#
INSERT INTO Book (bid, title, price, category) VALUES ('b001', 'Little Prince', 20, 'Fiction');
INSERT INTO Book (bid, title, price, category) VALUES ('b002','Physics', 201, 'Science');
INSERT INTO Book (bid, title, price, category) VALUES ('b003','Mechanics' ,100,'Engineering');
INSERT INTO Book (bid, title, price, category) VALUES ('1500982415', 'Engineering Possibilities: Soft Skills for Young Engineers', 20, 'Engineering');
 INSERT INTO Book (bid, title, price, category) VALUES ('0176509909', 'Canadian Professional Engineering and Geoscience', 140, 'Engineering');
 INSERT INTO Book (bid, title, price, category) VALUES ('0073398209', 'Shigley''s Mechanical Engineering Design', 302, 'Engineering');
 INSERT INTO Book (bid, title, price, category) VALUES ('0133575225', 'Introduction to Professional Engineering in Canada', 89, 'Engineering');
 INSERT INTO Book (bid, title, price, category) VALUES ('0133575233', 'Practical Law of Architecture, Engineering, and Geoscience', 84, 'Engineering');
 INSERT INTO Book (bid, title, price, category) VALUES ('9384588962', 'Engineering Drawing with Auto Cad', 55, 'Engineering');
 INSERT INTO Book (bid, title, price, category) VALUES ('0201835959', 'The Mythical Man-Month: Essays on Software Engineering', 32, 'Engineering');
#


/* Address
* id: address id
*
*/
DROP TABLE if exists Address;
CREATE TABLE Address (
id INT CONSTRAINT id_ck CHECK (id > 0) NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
street VARCHAR(100) NOT NULL,
province VARCHAR(20) NOT NULL,
country VARCHAR(20) NOT NULL,
zip VARCHAR(20) NOT NULL,
phone VARCHAR(20),
PRIMARY KEY(id)
);

#
# Inserting data for table 'address'
#
INSERT INTO Address (street, province, country, zip, phone) VALUES ('123 Yonge St', 'ON',
'Canada', 'K1E 6T5' ,'647-123-4567');
INSERT INTO Address (street, province, country, zip, phone) VALUES ('445 Avenue rd', 'ON',
'Canada', 'M1C 6K5' ,'416-123-8569');
INSERT INTO Address (street, province, country, zip, phone) VALUES ('789 Keele St.', 'ON',
'Canada', 'K3C 9T5' ,'416-123-9568');
#
#



/* Purchase Order
* lname: last name
* fname: first name
* id: purchase order id
* status:status of purchase
*/
DROP TABLE if exists PO;
CREATE TABLE PO (
id INT CONSTRAINT POid_ck CHECK (id > 0) NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
lname VARCHAR(20) NOT NULL,
fname VARCHAR(20) NOT NULL,
status VARCHAR(10) CONSTRAINT status_ck CHECK (status IN ('ORDERED','PROCESSED','DENIED')) NOT NULL,
address INT CONSTRAINT address_ck CHECK (address > 0) NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY (address) REFERENCES Address (id) ON DELETE CASCADE
);
CREATE INDEX PO_IDX ON PO(address);

#
# Inserting data for table 'PO'
#
INSERT INTO PO (lname, fname, status, address) VALUES ('John', 'White', 'PROCESSED', 1);
INSERT INTO PO (lname, fname, status, address) VALUES ('Peter', 'Black', 'DENIED', 2);
INSERT INTO PO (lname, fname, status, address) VALUES ('Andy', 'Green', 'ORDERED', 3);
#
#


/* Items on order
* id : purchase order id
* bid: unique identifier of Book
* price: unit price
*/
DROP TABLE if exists POItem;
CREATE TABLE POItem (
id INT CONSTRAINT POItemid_ck CHECK (id > 0) NOT NULL,
bid VARCHAR(20) NOT NULL,
price INT CONSTRAINT POItemprice_ck CHECK (price > 0) NOT NULL,
PRIMARY KEY(id,bid),
FOREIGN KEY(id) REFERENCES PO(id) ON DELETE CASCADE,
FOREIGN KEY(bid) REFERENCES Book(bid) ON DELETE CASCADE
);

CREATE INDEX POitem_IDX_id ON POItem(id);
CREATE INDEX POitem_IDX_bid ON POItem(bid);

#
# Inserting data for table 'POitem'
#
INSERT INTO POItem (id, bid, price) VALUES (1, 'b001', 20);
INSERT INTO POItem (id, bid, price) VALUES (2, 'b002', 201);
INSERT INTO POItem (id, bid, price) VALUES (3, 'b003', 100);
#
#


/* visit to website
* day: date
* bid: unique identifier of Book
* eventtype: status of purchase
*/
Inserting TABLE if exists VisitEvent;
CREATE TABLE VisitEvent (
day varchar(8) NOT NULL,
bid varchar(20) not null REFERENCES Book(bid),
eventtype VARCHAR(9) CONSTRAINT eventtype_ck CHECK (eventtype IN ('VIEW','CART','PURCHASE')) NOT NULL,
FOREIGN KEY(bid) REFERENCES Book(bid)
);

#
# Dumping data for table 'VisitEvent'
#
INSERT INTO VisitEvent (day, bid, eventtype) VALUES ('12202015', 'b001', 'VIEW');
INSERT INTO VisitEvent (day, bid, eventtype) VALUES ('12242015', 'b001', 'CART');
INSERT INTO VisitEvent (day, bid, eventtype) VALUES ('12252015', 'b001', 'PURCHASE');
#
#

/* 
* user name and password table
*/

CREATE TABLE accounts (
  userName         VARCHAR(255) NOT NULL ,
  password         VARCHAR(20) NOT NULL,
  account_type VARCHAR(7) CONSTRAINT type_ck CHECK (account_type IN ('user', 'admin','partner')) NOT NULL,
  PRIMARY KEY(userName));


CREATE TABLE user_roles (
  userName         VARCHAR(255) NOT NULL,
  role         VARCHAR(20) NOT NULL,
  PRIMARY KEY (userName, role)
);



/* 
* reviews table
*/

CREATE TABLE reviews(
id INT CONSTRAINT reviewid_ck CHECK (id > 0) NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1),
bid VARCHAR(20) NOT NULL,
review VARCHAR(20000),
stars INT CONSTRAINT stars_ck CHECK (stars > 0 AND stars < 6),
PRIMARY KEY(id),
FOREIGN KEY (bid) REFERENCES book (bid)
);


